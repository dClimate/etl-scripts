name: cpc-availability-check

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */3 * * *"

permissions:
  contents: read
  

jobs:
  check_available:
    runs-on: ubuntu-latest
 
    strategy:
      matrix:
        cid:
          ["${{vars.CPC_PRECIP_CONUS_CID}}", "${{vars.CPC_PRECIP_GLOBAL_CID}}", "${{vars.CPC_TMAX_CID}}", "${{vars.CPC_TMIN_CID}}"]

    env:
      FLUORINE_MULTIADDRESS: ${{vars.FLUORINE_MULTIADDRESS}}
      THORIUM_MULTIADDRESS: ${{vars.THORIUM_MULTIADDRESS}}
      CERIUM_MULTIADDRESS: ${{vars.CERIUM_MULTIADDRESS}}
      CPC_CID: ${{matrix.cid}}

    steps:
      - uses: actions/checkout@v4

      - name: Print Matrix Values
        run: |
          echo "Matrix Context:"
          echo '${{ toJSON(matrix) }}'

      - name: Install IPFS
        uses: ibnesayeed/setup-ipfs@c779340c110024feeb46579fef211c89332caf85
        with:
          ipfs_version: ${{vars.IPFS_VERSION}}
          run_daemon: true

      - name: Swarm peering add to our IPFS Servers
        run: |
          ipfs swarm peering add "$FLUORINE_MULTIADDRESS"
          ipfs swarm peering add "$THORIUM_MULTIADDRESS"
          ipfs swarm peering add "$CERIUM_MULTIADDRESS"

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"

      - name: Install all dependencies
        run: uv sync

      - name: Run CPC monitoring script
        run: uv run cpc/availability-check.py "$CPC_CID"
        
      - name: debugging, see what's there
        run: |
          ls -lap cpc/*
          ls -lap tmp/*.png
        
      - uses: actions/upload-artifact@v4
        with:
          name: Random Timepoint Plot
          path: tmp/*-plot.png
          if-no-files-found: error
          compression-level: 0
          retention-days: 3
